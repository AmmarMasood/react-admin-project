{"version":3,"sources":["Utils/server.js","Utils/authProvider.js","Components/Agents/Agents.js","Components/Properties/Properties.js","Components/Properties/PropertyTypes.js","Components/Admin/Admin.js","Components/System/System.js","Components/Menu/Menu.js","Components/dashboardSubmenus/systemHealth.js","Components/dashboardSubmenus/marketAnalysis.js","Components/dashboardSubmenus/agentPerformance.js","Components/dashboardSubmenus/statusOverview.js","Components/Agents/AgentCopy.js","App.js","index.js"],"names":["server","login","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","reject","checkAuth","getItem","getPermissions","AgentListTitle","AgentList","props","List","title","sort","order","Datagrid","rowClick","TextField","source","EditButton","PropertiesFilter","Filter","ReferenceInput","label","reference","allowEmpty","alwaysOn","SelectInput","optionText","AgentShow","Show","SimpleShowLayout","ReferenceArrayField","filters","filterDefaultValues","agentId","id","ReferenceField","style","textDecoration","to","pathname","state","Button","variant","color","AgentTitle","record","Name","AgentEdit","Edit","SimpleForm","TextInput","disabled","choices","name","AgentCreate","Create","redirect","PropertyListTitle","PropertyList","validateUserBoolean","value","validateUserNumber","undefined","isNaN","validateUserCreation","values","errors","type","PropertyEdit","validate","key","PropertyCreate","PropertyTypeListTitle","PropertytypeList","PropertytypeEdit","PropertytypeCreate","UserListTitle","AdminList","AdminEdit","PasswordInput","SystemListTitle","SystemList","UrlField","SystemEdit","Menu","menuList","icon","fontSize","openA","openB","openD","this","resources","onMenuClick","component","ListItem","button","onClick","setState","ListItemIcon","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","filter","x","options","menu","map","resource","i","MenuItemLink","primaryText","leftIcon","className","classes","nested","Component","withRouter","useState","link","setLink","useEffect","results","data","url","IframeUrl","replace","fontFamily","fontWeight","lineHeight","letterSpacing","Card","height","width","allowFullScreen","display","position","console","log","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","agent1","setAgent1","agent2","setAgent2","totalAgents","setTotalAgents","history","location","FormControl","InputLabel","Select","labelId","onChange","event","target","MenuItem","Identifier","Divider","marginLeft","marginBottom","length","agents","Accept","res","push","createHistory","dataProvider","jsonServerProvider","set","fetchUtils","fetchJson","App","React","lightMode","dark","setDark","ConfigurationMenu","forwardRef","ref","FormControlLabel","control","Switch","checked","MyUserMenu","UserMenu","MenuWithStyles","withStyles","paddingLeft","MyMenu","connect","getResources","MyAppBar","AppBar","userMenu","MyTheme","createMuiTheme","palette","blue","secondary","customRoutes","exact","path","AgentCopy","StatusOverview","AgentPerformance","MarketAnalysis","SystemHealth","Admin","layout","Layout","appBar","loginPage","Login","backgroundImage","backgroundColor","authProvider","Resource","homeAnalytics","financeIcon","chartPie","sitemapIcon","list","edit","create","show","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31758fd6.chunk.js","sourcesContent":["export const server = \"http://localhost:8080\";\r\n","import { server } from \"./server\";\nexport default {\n  // called when the user attempts to log in\n  login: ({ username, password }) => {\n    const request = new Request(`${server}/api/v1/auth/login`, {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      headers: new Headers({ \"Content-Type\": \"application/json\" })\n    });\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ token }) => {\n        localStorage.setItem(\"token\", token);\n      });\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    localStorage.removeItem(\"token\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"token\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return localStorage.getItem(\"token\") ? Promise.resolve() : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve()\n};\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  SimpleForm,\n  Edit,\n  TextInput,\n  SelectInput,\n  Create,\n  Show,\n  SimpleShowLayout,\n  ReferenceField,\n  ReferenceArrayField,\n  Filter,\n  ReferenceInput\n} from \"react-admin\";\nimport Button from '@material-ui/core/Button';\nimport {Link } from \"react-router-dom\";\nconst AgentListTitle = () => {\n  return <span>Agent Overview</span>;\n};\n\n\nexport const AgentList = props => (\n  <List title={<AgentListTitle />} sort={{order:'AESC'}} {...props}>\n    <Datagrid rowClick=\"show\">\n      <TextField source=\"Identifier\" />\n      <TextField source=\"Description\" />\n      <TextField source=\"Status\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nconst PropertiesFilter = props => (\n  <Filter {...props}>\n    <ReferenceInput\n      label=\"PropertyTypes\"\n      source=\"propertytypeId\"\n      reference=\"propertytypes\"\n      allowEmpty\n      alwaysOn\n    >\n      <SelectInput optionText=\"Identifier\" />\n    </ReferenceInput>\n  </Filter>\n);\n\nexport const AgentShow = props => (\n\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <TextField source=\"Identifier\" />\n      <TextField source=\"Description\" />\n      <TextField source=\"Status\" />\n      <ReferenceArrayField source=\"propertyIds\" reference=\"property\">\n        <List filters={<PropertiesFilter />} filterDefaultValues={{agentId: props.id}} {...props}>\n          <Datagrid>\n            <TextField source=\"id\" />\n            <ReferenceField source=\"propertytypeId\" reference=\"propertytypes\">\n              <TextField source=\"Identifier\" />\n            </ReferenceField>\n            <TextField source=\"Identifier\" />\n            <TextField source=\"value\" />\n            <TextField source=\"valueType\" />\n            <TextField source=\"lastEdited\" />\n            <EditButton />\n          </Datagrid>\n        </List>\n      </ReferenceArrayField>\n      <Link style={{textDecoration: \"none\"}} to={{\n        pathname: '/AgentCopy',\n         state: {agentId:  props.id }\n      }}>\n        <Button variant=\"contained\" color=\"primary\">\n         Agent Copy\n       </Button>\n       </Link>\n    </SimpleShowLayout>\n  </Show>\n);\n\n\nconst AgentTitle = ({ record }) => {\n  return <span>User {record ? `\"${record.Name}\"` : \"\"}</span>;\n};\n\nexport const AgentEdit = props => (\n  <Edit title={<AgentTitle />} {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"Identifier\" />\n      <TextInput source=\"Description\" />\n      <SelectInput\n        source=\"Status\"\n        choices={[\n          { id: \"ACTIVE\", name: \"ACTIVE\" },\n          { id: \"INACTIVE\", name: \"INACTIVE\" },\n          { id: \"DISABLED\", name: \"DISABLED\" }\n        ]}\n      />\n    </SimpleForm>\n  </Edit>\n);\n// UserCreate;\nexport const AgentCreate = props => (\n  <Create {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"Identifier\" />\n      <TextInput source=\"Description\" />\n      <SelectInput\n        source=\"Status\"\n        choices={[\n          { id: \"ACTIVE\", name: \"ACTIVE\" },\n          { id: \"INACTIVE\", name: \"INACTIVE\" },\n          { id: \"DISABLED\", name: \"DISABLED\" }\n        ]}\n      />\n    </SimpleForm>\n  </Create>\n);\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  ReferenceField,\n  EditButton,\n  ReferenceInput,\n  SimpleForm,\n  Edit,\n  TextInput,\n  SelectInput,\n  Create,\n  Filter\n} from \"react-admin\";\n\n// Filter with property type\nconst PropertiesFilter = props => (\n  <Filter {...props}>\n     <ReferenceInput label=\"Agents\" source=\"agentId\" reference=\"agents\" allowEmpty alwaysOn>\n      <SelectInput optionText=\"Identifier\" />\n    </ReferenceInput>\n    <ReferenceInput label=\"PropertyTypes\" source=\"propertytypeId\" reference=\"propertytypes\" allowEmpty alwaysOn>\n     <SelectInput optionText=\"Identifier\" />\n   </ReferenceInput>\n\n  </Filter>\n);\nconst PropertyListTitle = () => {\n  return <span>Properties</span>;\n};\n\n\nexport const PropertyList = props => (\n    <List title={<PropertyListTitle />} filters={<PropertiesFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <ReferenceField source=\"agentId\" reference=\"agents\">\n              <TextField source=\"Identifier\" />\n            </ReferenceField>\n            <ReferenceField source=\"propertytypeId\" reference=\"propertytypes\">\n              <TextField source=\"Identifier\" />\n            </ReferenceField>\n            <TextField source=\"Identifier\" />\n            <TextField source=\"value\" />\n            <TextField source=\"valueType\" />\n            <TextField source=\"lastEdited\"/>\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\n\nconst validateUserBoolean = value => {\n  if (\n    value.value !== \"TRUE\" &&\n    value.value !== \"FALSE\" &&\n    value.value !== \"false\" &&\n    value.value !== \"true\"\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst validateUserNumber = value => {\n  if (value !== undefined) {\n    if (isNaN(value)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n};\n\nconst validateUserCreation = values => {\n  const errors = {};\n  if (!values.type) {\n    errors.type = [\"Please select the type of value you want to input\"];\n  } else {\n    if (values.type === \"Boolean\") {\n      if (!validateUserBoolean(values)) {\n        errors.value = [\"Please enter a Boolean that is true/false\"];\n      }\n    } else if (values.type === \"Numeric\") {\n      if (!validateUserNumber(values.value)) {\n        errors.value = [\"Please enter a Numeric Value\"];\n      }\n    } else if (values.type === \"Text\") {\n      if (validateUserNumber(values.value) || validateUserBoolean(values)) {\n        errors.value = [\"Please enter a String Value\"];\n      }\n    }\n  }\n  return errors;\n};\n\n\n\nexport const PropertyEdit = props => (\n    <Edit {...props}>\n        <SimpleForm redirect=\"list\" validate={validateUserCreation}>\n            <TextInput disabled source=\"id\" />\n            <ReferenceInput key=\"agentId\" source=\"agentId\" reference=\"agents\">\n              <SelectInput optionText=\"Identifier\" />\n            </ReferenceInput>\n            <ReferenceInput key=\"propertytypeId\" source=\"propertytypeId\" reference=\"propertytypes\">\n              <SelectInput  optionText=\"Identifier\" />\n            </ReferenceInput>\n                  <TextInput source=\"Identifier\" />\n            <SelectInput\n                source=\"type\"\n                choices={[\n          { id: \"Boolean\", name: \"Boolean\" },\n          { id: \"Text\", name: \"Text\" },\n          { id: \"Numeric\", name: \"Numeric\" }\n        ]}\n      />\n      <TextInput source=\"value\" />\n      <TextInput disabled source=\"lastEdited\"/>\n        </SimpleForm>\n    </Edit>\n);\n\n\nexport const PropertyCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect=\"list\" validate={validateUserCreation}>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"Identifier\" />\n            <ReferenceInput source=\"agentId\" reference=\"agents\">\n              <SelectInput optionText=\"Identifier\" />\n            </ReferenceInput>\n            <ReferenceInput source=\"propertytypeId\" reference=\"propertytypes\">\n              <SelectInput optionText=\"Identifier\" />\n            </ReferenceInput>\n            <SelectInput\n        source=\"type\"\n        choices={[\n          { id: \"Boolean\", name: \"Boolean\" },\n          { id: \"Text\", name: \"Text\" },\n          { id: \"Numeric\", name: \"Numeric\" }\n        ]}\n      />\n            <TextInput source=\"value\" />\n        </SimpleForm>\n    </Create>\n);\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  SimpleForm,\n  Edit,\n  TextInput,\n  Create\n} from \"react-admin\";\n\nconst PropertyTypeListTitle = () => {\n  return <span>Property Types</span>;\n};\n\n\nexport const PropertytypeList = props => (\n    <List title={<PropertyTypeListTitle />}{...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"Identifier\" />\n            <TextField source=\"Description\" />\n            <EditButton />\n      </Datagrid>\n    </List>\n);\n\n// you need to create all the urls before i can continue\nexport const PropertytypeEdit = props => (\n    <Edit {...props}>\n        <SimpleForm redirect=\"list\">\n            <TextInput source=\"Identifier\" />\n            <TextInput source=\"Description\" />\n        </SimpleForm>\n    </Edit>\n)\n\nexport const PropertytypeCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect=\"list\">\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"Identifier\" />\n            <TextInput  source=\"Description\" />\n        </SimpleForm>\n    </Create>\n)\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  SimpleForm,\n  Edit,\n  TextInput,\n  PasswordInput\n} from \"react-admin\";\n\nconst UserListTitle = () => {\n  return <span>User</span>;\n};\n\nexport const AdminList = props => (\n  <List title={<UserListTitle />} {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"Username\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport const AdminEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"Username\" />\n      <PasswordInput label=\"Old Password\" source=\"OldPassword\" />\n      <PasswordInput label=\"New Password\" source=\"NewPassword\" />\n    </SimpleForm>\n  </Edit>\n);\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  Edit,\n  UrlField,\n  SimpleForm,\n  TextInput\n} from \"react-admin\";\n\nconst SystemListTitle = () => {\n  return <span>System</span>;\n};\n\nexport const SystemList = props => (\n  <List title={<SystemListTitle />}{...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n     <TextField source=\"Name\" />\n     <UrlField source = \"IframeUrl\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport const SystemEdit = props => (\n  <Edit {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput source=\"id\" disabled/>\n      <TextInput source=\"Name\" disabled />\n      <TextInput source=\"IframeUrl\" />\n    </SimpleForm>\n  </Edit>\n);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { MenuItemLink } from \"react-admin\";\nimport {\n  List,\n  ListItem,\n  Collapse,\n  ListItemText,\n  ListItemIcon\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\n// custom menu starts\nclass Menu extends Component {\n  menuList = [\n    { name: \"A\", label: \"Agents\", icon: <SupervisorAccountIcon fontSize=\"small\"/> },\n    { name: \"B\", label: \"Settings\", icon: <SettingsIcon fontSize=\"small\" /> },\n    { name: \"D\", label: \"Dashboard\", icon: <DashboardIcon fontSize=\"small\" /> }]\n  constructor(props) {\n    super(props);\n    this.state = { openA: false, openB: false, openD: false };\n  }\n  render() {\n    const { resources, onMenuClick } = this.props;\n    return (\n      <div>\n        <List component=\"nav\">\n          {/* for menu D */}\n          <div key={this.menuList[2].name}>\n            <ListItem\n              button\n              onClick={() => {\n                this.setState({ openD: !this.state.openD });\n              }}\n            >\n              <ListItemIcon>{this.menuList[2].icon}</ListItemIcon>\n              <ListItemText primary={this.menuList[2].label} />\n              {this.state.openD ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.openD} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {resources\n                  .filter(x => x.options.menu === this.menuList[2].name)\n                  .map((resource, i) => (\n                    <MenuItemLink\n                      key={\"m\" + i}\n                      to={`/${resource.name}`}\n                      primaryText={resource.options.label || resource.name}\n          \n                      leftIcon={\n                        resource.options.icon\n                          ? resource.options.icon\n                          : undefined\n                      }\n                      onClick={onMenuClick}\n                      className={this.props.classes.nested}\n                    />\n                  ))}\n              </List>\n            </Collapse>\n          </div>\n          {/* for menu A */}\n          <div key={this.menuList[0].name}>\n            <ListItem\n              button\n              onClick={() => {\n                this.setState({ openA: !this.state.openA });\n              }}\n            >\n              <ListItemIcon>{this.menuList[0].icon}</ListItemIcon>\n              <ListItemText primary={this.menuList[0].label} />\n              {this.state.openA ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.openA} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {resources\n                  .filter(x => x.options.menu === this.menuList[0].name)\n                  .map((resource, i) => (\n                    <MenuItemLink\n                      key={\"m\" + i}\n                      to={`/${resource.name}`}\n                      primaryText={resource.options.label || resource.name}\n                      leftIcon={\n                        resource.options.icon\n                          ? resource.options.icon\n                          : undefined\n                      }\n                      onClick={onMenuClick}\n                      className={this.props.classes.nested}\n                    />\n                  ))}\n              </List>\n            </Collapse>\n          </div>\n          {/* menu list 'B' */}\n          <div key={this.menuList[1].name}>\n            <ListItem\n              button\n              onClick={() => {\n                this.setState({ openB: !this.state.openB });\n              }}\n            >\n              <ListItemIcon>{this.menuList[1].icon}</ListItemIcon>\n              <ListItemText primary={this.menuList[1].label} />\n              {this.state.openB ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.openB} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {resources\n                  .filter(x => x.options.menu === this.menuList[1].name)\n                  .map((resource, i) => (\n                    <MenuItemLink\n                      key={\"n\" + i}\n                      to={`/${resource.name}`}\n                      primaryText={resource.options.label || resource.name}\n                      leftIcon={\n                        resource.options.icon\n                          ? resource.options.icon\n                          : undefined\n                      }\n                      onClick={onMenuClick}\n                      className={this.props.classes.nested}\n                    />\n                  ))}\n              </List>\n            </Collapse>\n          </div>\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Iframe from \"react-iframe\";\nimport \"./cardStyles.css\";\nimport { server } from \"../../Utils/server\";\n\nexport default () => {\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`${server}/system/4`, {\n      method: \"get\",\n      headers: new Headers({\n        \"X-Authorization\": `Bearer ${token}`\n      })\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        // var url = data.IframeUrl + \"&output=embed\";\n        var url = data.IframeUrl.replace(\"watch?v=\", \"embed/\");\n        // const IframeUrl = data.IframeUrl;\n        setLink(url);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1\n        style={{\n          fontSize: \"1.25rem\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: \"500\",\n          color: \"white\",\n          lineHeight: \"1.6\",\n          letterSpacing: \"0.0075em\"\n        }}\n      >\n        System Health\n      </h1>\n      <Card style={{ height: \"80vh\", width: \"100%\" }}>\n        <Iframe\n          url={link}\n          width=\"100%\"\n          height=\"100%\"\n          id=\"myId\"\n          allowFullScreen\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n        />\n      </Card>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Iframe from \"react-iframe\";\nimport \"./cardStyles.css\";\nimport { server } from \"../../Utils/server\";\n\nexport default () => {\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`${server}/system/3`, {\n      method: \"get\",\n      headers: new Headers({\n        \"X-Authorization\": `Bearer ${token}`\n      })\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        // var url = data.IframeUrl + \"&output=embed\";\n        console.log(data);\n        var url = data.IframeUrl.replace(\"watch?v=\", \"embed/\");\n        // const IframeUrl = data.IframeUrl;\n        setLink(url);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1\n        style={{\n          fontSize: \"1.25rem\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: \"500\",\n          color: \"white\",\n          lineHeight: \"1.6\",\n          letterSpacing: \"0.0075em\"\n        }}\n      >\n        Market Analysis\n      </h1>\n      <Card style={{ height: \"80vh\", width: \"100%\" }}>\n        <Iframe\n          url={link}\n          width=\"100%\"\n          height=\"100%\"\n          id=\"myId\"\n          allowFullScreen\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n        />\n      </Card>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Iframe from \"react-iframe\";\nimport \"./cardStyles.css\";\nimport { server } from \"../../Utils/server\";\nexport default () => {\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`${server}/system/2`, {\n      method: \"get\",\n      headers: new Headers({\n        \"X-Authorization\": `Bearer ${token}`\n      })\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        // var url = data.IframeUrl + \"&output=embed\";\n        var url = data.IframeUrl.replace(\"watch?v=\", \"embed/\");\n        // const IframeUrl = data.IframeUrl;\n        setLink(url);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1\n        style={{\n          fontSize: \"1.25rem\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: \"500\",\n          color: \"white\",\n          lineHeight: \"1.6\",\n          letterSpacing: \"0.0075em\"\n        }}\n      >\n        Agent Performance\n      </h1>\n      <Card style={{ height: \"80vh\", width: \"100%\" }}>\n        <Iframe\n          url={link}\n          width=\"100%\"\n          height=\"100%\"\n          id=\"myId\"\n          allowFullScreen\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n        />\n      </Card>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Iframe from \"react-iframe\";\nimport \"./cardStyles.css\";\nimport { server } from \"../../Utils/server\";\nexport default () => {\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`${server}/system/1`, {\n      method: \"get\",\n      headers: new Headers({\n        \"X-Authorization\": `Bearer ${token}`\n      })\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        // var url = data.IframeUrl + \"&output=embed\";\n        var url = data.IframeUrl.replace(\"watch?v=\", \"embed/\");\n        // const IframeUrl = data.IframeUrl;\n        setLink(url);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1\n        style={{\n          fontSize: \"1.25rem\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: \"500\",\n          color: \"white\",\n          lineHeight: \"1.6\",\n          letterSpacing: \"0.0075em\"\n        }}\n      >\n        Status Overview\n      </h1>\n      <Card style={{ height: \"80vh\", width: \"100%\" }}>\n        <Iframe\n          url={link}\n          width=\"100%\"\n          height=\"100%\"\n          id=\"myId\"\n          allowFullScreen\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n        />\n      </Card>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Divider from \"@material-ui/core/Divider\";\n// import { createBrowserHistory as History } from 'history';\n// import history from './history';\nimport { withRouter } from \"react-router-dom\";\nimport { server } from \"../../Utils/server\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst AgentCopy = props => {\n  // const [link, setLink] = useState(\"\");\n  const [agent1, setAgent1] = useState(\"\");\n  const [agent2, setAgent2] = useState(\"\");\n  const [totalAgents, setTotalAgents] = useState([]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`${server}/agents?_end=25&_order=DESC&_sort=id&_start=0`, {\n      method: \"get\",\n      headers: new Headers({\n        \"X-Authorization\": `Bearer ${token}`\n      })\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setTotalAgents(data);\n        setAgent1(props.history.location.state.agentId);\n      });\n  }, []);\n\n  const handleChangeAgent1 = event => {\n    setAgent1(event.target.value);\n  };\n  const handleChangeAgent2 = event => {\n    setAgent2(event.target.value);\n  };\n  const handleOnSubmit = () => {\n    if (agent1.length === 0 || agent2.length === 0) {\n      console.log(\"cant\");\n      return;\n    }\n    const agents = {\n      agent1,\n      agent2\n    };\n    const token = localStorage.getItem(\"token\");\n    fetch(`${server}/agentCopy/`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"X-Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify(agents)\n    })\n      .then(res => res.json())\n      .then(res => {\n        setAgent1(\"\");\n        setAgent2(\"\");\n        console.log(\"done\");\n        props.history.push(\"/agents\");\n      });\n  };\n\n  return (\n    <>\n      <h1\n        style={{\n          fontSize: \"1.25rem\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: \"500\",\n          color: \"white\",\n          lineHeight: \"1.6\",\n          letterSpacing: \"0.0075em\"\n        }}\n      >\n        Agent Copy\n      </h1>\n\n      <Card>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Copy from</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={agent1}\n            onChange={handleChangeAgent1}\n          >\n            {totalAgents.map(data => (\n              <MenuItem key={data.id} value={data.id}>\n                {data.Identifier}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Divider />\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Copy to</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={agent2}\n            onChange={handleChangeAgent2}\n          >\n            {totalAgents.map(data => (\n              <MenuItem key={data.id} value={data.id}>\n                {data.Identifier}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Divider />\n        <Button\n          style={{\n            marginTop: \"30px\",\n            marginLeft: \"10px\",\n            marginBottom: \"10px\"\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleOnSubmit}\n        >\n          Copy\n        </Button>\n      </Card>\n    </>\n  );\n};\n\nexport default withRouter(AgentCopy);\n","// in src/App.js\nimport React, { useEffect } from \"react\";\nimport {\n  Admin,\n  Resource,\n  fetchUtils,\n  Login,\n  AppBar,\n  Layout,\n  UserMenu,\n  getResources\n} from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport { Route } from \"react-router-dom\";\n// import Dashboard from \"./Components/Dashboard\";\nimport authProvider from \"./Utils/authProvider\";\nimport {\n  AgentList,\n  AgentCreate,\n  AgentEdit,\n  AgentShow\n} from \"./Components/Agents/Agents\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {\n  PropertyList,\n  PropertyEdit,\n  PropertyCreate\n} from \"./Components/Properties/Properties\";\nimport {\n  PropertytypeList,\n  PropertytypeEdit,\n  PropertytypeCreate\n} from \"./Components/Properties/PropertyTypes\";\nimport { AdminList, AdminEdit } from \"./Components/Admin/Admin\";\nimport { SystemList, SystemEdit } from \"./Components/System/System\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menu from \"./Components/Menu/Menu\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport { Icon } from \"@iconify/react\";\n// for status overview\nimport homeAnalytics from \"@iconify/icons-mdi/home-analytics\";\n//for agent performance\nimport financeIcon from \"@iconify/icons-mdi/finance\";\n// for market analysis\nimport chartPie from \"@iconify/icons-mdi/chart-pie\";\n// for systems health\nimport sitemapIcon from \"@iconify/icons-mdi/sitemap\";\nimport SystemHealth from \"./Components/dashboardSubmenus/systemHealth\";\nimport MarketAnalysis from \"./Components/dashboardSubmenus/marketAnalysis\";\nimport AgentPerformance from \"./Components/dashboardSubmenus/agentPerformance\";\nimport StatusOverview from \"./Components/dashboardSubmenus/statusOverview\";\nimport AgentCopy from \"./Components/Agents/AgentCopy\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport { server } from \"./Utils/server\";\nconst history = createHistory();\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n  const token = localStorage.getItem(\"token\");\n  options.headers.set(\"X-Authorization\", `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\nconst dataProvider = jsonServerProvider(server, httpClient);\n\nconst App = () => {\n  // dark theme/light theme starts\n  const [dark, setDark] = React.useState({\n    lightMode: false\n  });\n  // to make sure that darkMode stays\n  useEffect(() => {\n    if (localStorage.getItem(\"lightMode\") === true + \"\") {\n      setDark({ lightMode: true });\n    } else {\n      setDark({ lightMode: false });\n    }\n  }, []);\n  // ends\n  const handleChange = name => event => {\n    localStorage.setItem(\"lightMode\", event.target.checked + \"\");\n    setDark({ ...dark, [name]: event.target.checked });\n  };\n  const ConfigurationMenu = React.forwardRef(({ onClick }, ref) => (\n    <>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={dark.lightMode}\n            onChange={handleChange(\"lightMode\")}\n            value=\"lightMode\"\n            color=\"#212121\"\n          />\n        }\n        style={{ marginLeft: \"5px\" }}\n        label=\"Light Mode\"\n      />\n    </>\n  ));\n  const MyUserMenu = props => (\n    <UserMenu {...props}>\n      <ConfigurationMenu />\n    </UserMenu>\n  );\n  // custom menu implementation starts\n  const menuStyles = theme => ({\n    nested: {\n      paddingLeft: theme.spacing(3)\n    }\n  });\n  var MenuWithStyles = withStyles(menuStyles)(Menu);\n\n  const MyMenu = withRouter(\n    connect(state => ({\n      resources: getResources(state)\n    }))(MenuWithStyles)\n  );\n  // custom menu implementation ends\n  const MyAppBar = props => <AppBar {...props} userMenu={<MyUserMenu />} />;\n  const myLayout = props => (\n    <Layout {...props} appBar={MyAppBar} menu={MyMenu} />\n  );\n  const myLoginPage = props => (\n    <Login\n      {...props}\n      backgroundImage=\"\"\n      style={{\n        backgroundColor:\n          localStorage.getItem(\"lightMode\") === true + \"\" ? \"\" : \"#424242\"\n      }}\n    />\n  );\n  const MyTheme = createMuiTheme({\n    palette: {\n      type: dark.lightMode ? \"light\" : \"dark\",\n      primary: blue,\n      secondary: blue\n    }\n  });\n  // Dark/Light theme ends\n  // custom routes for dashboard starts\n  const customRoutes = [\n    <Route exact path=\"/AgentCopy\" component={AgentCopy} />,\n    <Route exact path=\"/status_Overview\" component={StatusOverview} />,\n    <Route exact path=\"/agent_Performance\" component={AgentPerformance} />,\n    <Route exact path=\"/market_Analysis\" component={MarketAnalysis} />,\n    <Route exact path=\"/system_Health\" component={SystemHealth} />\n  ];\n  // ends\n  return (\n    <Admin\n      history={history}\n      theme={MyTheme}\n      layout={myLayout}\n      customRoutes={customRoutes}\n      // dashboard={Dashboard}\n      loginPage={myLoginPage}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n    >\n      <Resource\n        name=\"status_Overview\"\n        options={{\n          label: \"Status Overview\",\n          menu: \"D\",\n          icon: <Icon icon={homeAnalytics} width=\"1.1em\" height=\"1.1em\" />\n        }}\n      />\n      <Resource\n        name=\"agent_Performance\"\n        options={{\n          label: \"Agent Performance\",\n          menu: \"D\",\n          icon: <Icon icon={financeIcon} width=\"1.1em\" height=\"1.1em\" />\n        }}\n      />\n\n      <Resource\n        name=\"market_Analysis\"\n        options={{\n          label: \"Market Analysis\",\n          menu: \"D\",\n          icon: <Icon icon={chartPie} width=\"1.1em\" height=\"1.1em\" />\n        }}\n      />\n\n      <Resource\n        name=\"system_Health\"\n        options={{\n          label: \"System Health\",\n          menu: \"D\",\n          icon: <Icon icon={sitemapIcon} width=\"1.1em\" height=\"1.1em\" />\n        }}\n      />\n      <Resource\n        name=\"agents\"\n        list={AgentList}\n        edit={AgentEdit}\n        create={AgentCreate}\n        show={AgentShow}\n        options={{\n          label: \"Agent Overview\",\n          menu: \"A\",\n          icon: <SubjectIcon fontSize=\"small\" />\n        }}\n      />\n\n      <Resource\n        name=\"AgentCopy\"\n        options={{\n          label: \"Agent Copy\",\n          menu: \"f\",\n          icon: <FileCopyIcon fontSize=\"small\" />\n        }}\n      />\n      <Resource\n        name=\"propertytypes\"\n        list={PropertytypeList}\n        edit={PropertytypeEdit}\n        create={PropertytypeCreate}\n        options={{\n          label: \"Property Types\",\n          menu: \"A\",\n          icon: <AssignmentTurnedInIcon fontSize=\"small\" />\n        }}\n      />\n\n      <Resource\n        name=\"property\"\n        list={PropertyList}\n        edit={PropertyEdit}\n        create={PropertyCreate}\n        options={{\n          label: \"Properties\",\n          menu: \"A\",\n          icon: <BookmarkIcon fontSize=\"small\" />\n        }}\n      />\n      <Resource\n        name=\"admin\"\n        list={AdminList}\n        edit={AdminEdit}\n        options={{\n          label: \"User\",\n          menu: \"B\",\n          icon: <AccountBoxIcon fontSize=\"small\" />\n        }}\n      />\n      <Resource\n        name=\"system\"\n        list={SystemList}\n        edit={SystemEdit}\n        options={{\n          label: \"System\",\n          menu: \"B\",\n          icon: <BuildIcon fontSize=\"small\" />\n        }}\n      />\n    </Admin>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}